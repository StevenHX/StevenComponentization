plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // jPush配置
        manifestPlaceholders = [
                VERSION_CODE: versionCode,
                VERSION_NAME: versionName,
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "7756d6f8678d967e4be435d7",
                JPUSH_CHANNEL: "developer-default"
        ]
    }

    signingConfigs {
        release {
            storeFile file("$rootDir/Mes5Android.jks")
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
        debug {
            storeFile file("$rootDir/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.debug
            proguardFiles 'proguard-rules.pro'
        }
    }
    android.applicationVariants.all {
        variant ->
            def buildType = variant.buildType.name
            if (buildType == 'release') {
                def createTimeDay = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
                variant.getPackageApplicationProvider().get().outputDirectory = new File(project.rootDir.absolutePath + "/apks/${buildType}/${createTimeDay}")
            }
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (buildType == 'release') {
                            outputFileName = "Mes5_Android_release_V${variant.versionName}_${variant.versionCode}.apk"
                        } else if (buildType == 'debug') {
                            outputFileName = "Mes5_Android_debug_V${variant.versionName}_${variant.versionCode}.apk"
                        }
                    }
            }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    //统一资源前缀，规范资源引用
    resourcePrefix "app_"

    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation project(path: ':main')
    implementation project(path: ':login')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

static def nowTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}